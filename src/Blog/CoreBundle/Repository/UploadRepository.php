<?php

namespace Blog\CoreBundle\Repository;

use Blog\CoreBundle\Entity\Upload;
use Blog\CoreBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Gedmo\Translatable\TranslatableListener;

/**
 * UploadRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UploadRepository extends EntityRepository
{
	public function findForPaginator(User $user, $query)
	{
		$qb = $this->createQueryBuilder('u');

		if ($query) {
			$qb->andWhere('u.name LIKE :query OR u.file LIKE :query');
			$qb->setParameter('query', "%$query%");
		}

		if ($user->getRol() == User::ROLE_CENTER) {
			$qb->innerJoin('u.center', 'c')
				->innerJoin('c.profiles', 'p')
				->andWhere('p.id = :profile')->setParameter('profile', $user->getProfile());
		}

		return $qb;
	}

	public function findUploadsByUser(User $user)
	{
		$qb = $this->createQueryBuilder('u')->orderBy('u.order', 'ASC')->addOrderBy('u.created', 'DESC');

		if ($user->getRol() == User::ROLE_CENTER) {
			$qb->innerJoin('u.center', 'c')
				->innerJoin('c.profiles', 'p')
				->andWhere('p.id = :profile')->setParameter('profile', $user->getProfile());
		}
		elseif ($user->getRol() == User::ROLE_PARENT) {
			$qb->innerJoin('u.center', 'c')
				->innerJoin('c.weeks', 'w')
				->andWhere('w.profile = :profile')->setParameter('profile', $user->getProfile());
		}

		$query = $qb->getQuery();
		$query->setHint(TranslatableListener::HINT_FALLBACK, 0);
		$query->setHint(Query::HINT_CUSTOM_OUTPUT_WALKER, 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker');

		return $query->getResult();
	}
}